{"version":3,"file":"static/js/104.b9e25123.chunk.js","mappings":"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","sources":["components/movies/card.jsx","utils/index.js","components/movies/header.jsx","pages/movies/index.jsx","assets|sync|/^/.//.*$","utils/API|sync|/^/.//CONTENTLISTINGPAGE/-PAGE.*/.json$"],"sourcesContent":["import React from \"react\";\n\nexport default function MovieCard(props) {\n  const { data } = props;\n\n  const getPoster = (path) => {\n    try {\n      return require(`assets/${path}`);\n    } catch (err) {\n      return require(`assets/placeholder_for_missing_posters.png`);\n    }\n  };\n\n  return (\n    <div>\n      <img src={getPoster(data[\"poster-image\"])} alt={data.name}></img>\n      <div className=\"pt-2 pb-4 text-white truncate\">{data.name}</div>\n    </div>\n  );\n}\n","export const apiMimic = async (page, limit, offset, search) => {\n  const data = await require(`./API/CONTENTLISTINGPAGE-PAGE${page}.json`);\n\n  if (limit != null && offset != null) {\n    return {\n      page: {\n        ...data.page,\n        \"content-items\": {\n          content: data.page[\"content-items\"].content.slice(\n            offset,\n            offset + limit\n          ),\n        },\n      },\n    };\n  }\n\n  return data;\n};\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { searchMovies } from \"redux/slices/movieSlice\";\n\nexport default function MovieListHeader() {\n  const { pageData } = useSelector((state) => state.movies);\n  const dispatch = useDispatch();\n\n  const [search, setSearch] = useState(false);\n\n  const handleSearch = ({ target }) => {\n    dispatch(searchMovies(target.value));\n  };\n\n  return (\n    <div className=\"movie-header w-full text-white flex px-2 items-center justify-between fixed h-[70px]\">\n      {!search ? (\n        <>\n          <div className=\"flex\">\n            <img\n              src={require(`assets/Back.png`)}\n              className=\"h-5 w-5 mr-3 mt-[5px]\"\n              alt=\"back\"\n            />\n            <span className=\"text-2xl\">{pageData?.title}</span>\n          </div>\n          <img\n            src={require(`assets/search.png`)}\n            className=\"h-6 w-6\"\n            alt=\"search\"\n            onClick={() => {\n              setSearch(true);\n            }}\n          />\n        </>\n      ) : (\n        <>\n          <input\n            className=\"text-lg outline-none bg-black rounded border-2 border-gray-600 p-2 w-full\"\n            name=\"search\"\n            placeholder=\"Search movies\"\n            type=\"text\"\n            onChange={handleSearch}\n          />\n          <img\n            src={require(`assets/close-w.png`)}\n            className=\"absolute right-5 h-5 w-5\"\n            alt=\"close\"\n            onClick={() => {\n              dispatch(searchMovies(\"\"));\n              setSearch(false);\n            }}\n          />\n        </>\n      )}\n    </div>\n  );\n}\n","import MovieCard from \"components/movies/card\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setMoviesPage, updateMoviesPage } from \"redux/slices/movieSlice\";\nimport { apiMimic } from \"utils\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport MovieListHeader from \"components/movies/header\";\nimport Loader from \"components/Loader\";\n\nexport default function Movies() {\n  const { movieList, pageData, isSearch, movieSearchList } = useSelector(\n    (state) => state.movies\n  );\n  const dispatch = useDispatch();\n\n  const [hasmore, sethasmore] = useState(true);\n\n  const getNextMoviesFromApi = async () => {\n    const lastRequestPage = pageData?.[\"page-num-requested\"];\n    const page = lastRequestPage ? parseInt(lastRequestPage) + 1 : 1;\n    const data = await apiMimic(page);\n    dispatch(updateMoviesPage(data));\n  };\n\n  useEffect(() => {\n    const getMoviesFromApi = async () => {\n      const data = await apiMimic(1);\n      dispatch(setMoviesPage(data));\n    };\n\n    getMoviesFromApi();\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isSearch) {\n      // since client side search\n      sethasmore(false);\n      return;\n    }\n    sethasmore(movieList.length < pageData?.[\"total-content-items\"]);\n  }, [pageData, movieList, isSearch]);\n\n  return (\n    <div>\n      <MovieListHeader />\n      <InfiniteScroll\n        dataLength={isSearch ? movieSearchList.length : movieList.length}\n        next={getNextMoviesFromApi}\n        hasMore={hasmore}\n        loader={<Loader />}\n        endMessage={\n          isSearch && !movieSearchList.length ? (\n            <p className=\"text-gray-500 text-center p-2 mt-20\">\n              No movies found\n            </p>\n          ) : (\n            <p className=\"text-gray-500 text-center p-2\">No more movies</p>\n          )\n        }\n      >\n        <div className=\" md:grid-cols-4 lg:grid-cols-6 px-4 grid grid-cols-3 gap-4\">\n          {isSearch\n            ? movieSearchList?.map((movie, i) => (\n                <MovieCard key={i} data={movie} />\n              ))\n            : movieList?.map((movie, i) => <MovieCard key={i} data={movie} />)}\n        </div>\n      </InfiniteScroll>\n    </div>\n  );\n}\n","var map = {\n\t\"./Back.png\": 102,\n\t\"./cancel.png\": 160,\n\t\"./close-w.png\": 70,\n\t\"./nav_bar.png\": 819,\n\t\"./placeholder_for_missing_posters.png\": 673,\n\t\"./poster1.jpg\": 385,\n\t\"./poster2.jpg\": 693,\n\t\"./poster3.jpg\": 21,\n\t\"./poster4.jpg\": 802,\n\t\"./poster5.jpg\": 736,\n\t\"./poster6.jpg\": 872,\n\t\"./poster7.jpg\": 64,\n\t\"./poster8.jpg\": 927,\n\t\"./poster9.jpg\": 846,\n\t\"./search.png\": 305\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 173;","var map = {\n\t\"./CONTENTLISTINGPAGE-PAGE1.json\": 254,\n\t\"./CONTENTLISTINGPAGE-PAGE2.json\": 841,\n\t\"./CONTENTLISTINGPAGE-PAGE3.json\": 913\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 774;"],"names":["MovieCard","props","data","src","path","require","err","getPoster","alt","name","className","apiMimic","page","limit","offset","search","content","slice","MovieListHeader","pageData","useSelector","state","movies","dispatch","useDispatch","useState","setSearch","placeholder","type","onChange","target","searchMovies","value","onClick","title","Movies","movieList","isSearch","movieSearchList","hasmore","sethasmore","getNextMoviesFromApi","lastRequestPage","parseInt","updateMoviesPage","useEffect","getMoviesFromApi","setMoviesPage","length","dataLength","next","hasMore","loader","Loader","endMessage","map","movie","i","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports"],"sourceRoot":""}